node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 457
          }
        }
        tensor_content: "\237\257\353\275\237\257\353\275\237\257\353\275\237\257\353\275\237\257\353\275\237\257\353\275\237\257\353\275\237\257\353\275\237\257\353\275\237\257\353\275\237\257\353\275\237\257\353\275\347\\|?\347\\|?\347\\|?\347\\|?\347\\|?\347\\|?\347\\|?\347\\|?\347\\|?\347\\|?\347\\|?\347\\|?\347\\|?\252bO>\252bO>\252bO>\252bO>\252bO>\252bO>\252bO>\252bO>\252bO>\252bO>\252bO>\252bO>\252bO>\355\301\374\277\355\301\374\277\355\301\374\277\355\301\374\277\355\301\374\277\355\301\374\277\355\301\374\277\355\301\374\277\355\301\374\277\355\301\374\277\355\301\374\277\355\301\374\277\355\301\374\277\016\t\222\277\016\t\222\277\016\t\222\277\016\t\222\277\016\t\222\277\016\t\222\277\016\t\222\277\016\t\222\277\016\t\222\277\016\t\222\277\016\t\222\277\016\t\222\277\016\tgI?\223gI?\223gI?\223gI?\223gI?\223gI?\223gI?\223gI?\223gI?\223gI?\223gI?\223gI?\223gI?\262\351\264?\262\351\264?\262\351\264?\262\351\264?\262\351\264?\262\351\264?\262\351\264?\262\351\264?\262\351\264?\262\351\264?\262\351\264?\262\351\264?\262\351\264?\333`\221?\333`\221?\333`\221?\333`\221?\333`\221?\333`\221?\333`\221?\333`\221?\333`\221?\333`\221?\333`\221?\333`\221?\333`\221?\315\242\222?\315\242\222?\315\242\222?\315\242\222?\315\242\222?\315\242\222?\315\242\222?\315\242\222?\315\242\222?\315\242\222?\315\242\222?\315\242\222?\315\242\222?\277\207\\=\277\207\\=\277\207\\=\277\207\\=\277\207\\=\277\207\\=\277\207\\=\277\207\\=\277\207\\=\277\207\\=\277\207\\=\277\207\\=\277\207\\=q\345\272?q\345\272?q\345\272?q\345\272?q\345\272?q\345\272?q\345\272?q\345\272?q\345\272?q\345\272?q\345\272?q\345\272?q\345\272?\356\365P?\356\365P?\356\365P?\356\365P?\356\365P?\356\365P?\356\365P?\356\365P?\356\365P?\356\365P?\356\365P?\356\365P?\356\365P?\237\302\242?\237\302\242?\237\302\242?\237\302\242?\237\302\242?\237\302\242?\237\302\242?\237\302\242?\237\302\242?\237\302\242?\237\302\242?\237\302\242?\237\302\242?\242\356\230?\242\356\230?\242\356\230?\242\356\230?\242\356\230?\242\356\230?\242\356\230?\242\356\230?\242\356\230?\242\356\230?\242\356\230?\242\356\230?\242\356\230?\331/m?\331/m?\331/m?\331/m?\331/m?\331/m?\331/m?\331/m?\331/m?\331/m?\331/m?\331/m?\331/mme\030>me\030>me\030>me\030>me\030>me\030>me\030>me\030>me\030>me\030>me\030>me\030>me\030>\223\306\303?\223\306\303?\223\306\303?\223\306\303?\223\306\303?\223\306\303?\223\306\303?\223\306\303?\223\306\303?\223\306\303?\223\306\303?\223\306\303?\223\306\303?t\'\322?t\'\322?t\'\322?t\'\322?t\'\322?t\'\322?t\'\322?t\'\322?t\'\322?t\'\322?t\'\322?t\'\322?tk?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?\376\363k?"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 457
          }
        }
        tensor_content: "(\275%@(\275%@(\275%@?\021\361??\021\361??\021\361??\021\361? \203`\277 \203`\277 \203`\277 \203`\277 \203`\277\0134\211\277\0134\211\277\0134\211\277\0134\211\277\224\240\036\275\224\240\036\275\224\240\036\275\224\240\036\275\363\016\311?\363\016\311?\363\016\311?\363\016\311?\363\016\311?\020\356V?\020\356V?\020\356V?\020\356V?\231\215\243?\231\215\243?\231\215\243?\231\215\243?r_\213\277r_\213\277r_\213\277r_\213\277r_\213\277\365\000I\300\365\000I\300\365\000I\300\365\000I\300\302\327}\300\302\327}\300\302\327}\300\302\327}i\215\277\267i\215\277\267i\215\277\267i\215\277\267i\215\277m}\032@m}\032@m}\032@m}\032@\273\265\326?\273\265\326?\273\265\326?\273\265\326?\374\237\210\277\374\237\210\277\374\237\210\277\374\237\210\277BL%\275BL%\275BL%\275BL%\275BL%\275\n\014M?\n\014M?\n\014M?\n\014M?Qi\221?Qi\221?Qi\221?Qi\221?o,8@o,8@o,8@o,8@o,8@\256q\323\276\256q\323\276\256q\323\276\256q\323\276L\356\320?L\356\320?L\356\320?L\356\320?L\356\320?\255\336\202?\255\336\202?\255\336\202?\255\336\202?\317\201r@\317\201r@\317\201r@\317\201r@\243D\022\300\243D\022\300\243D\022\300\243D\022\300\243D\022\300;\340\271@;\340\271@;\340\271@;\340\271@S\321\303\277S\321\303\277S\321\303\277S\321\303\277\007fA?\007fA?\007fA?\007fA?\253[\205\277\253[\205\277\253[\205\277\253[\205\277\253[\205\277\335\253\353?\335\253\353?\335\253\353?\335\253\353?\216\260\255?\216\260\255?\216\260\255?\216\260\255?\216\260\255?b\264\254\277b\264\254\277b\264\254\277b\264\254\277N\241\214\275N\241\214\275N\241\214\275N\241\214\275\344\342\022@\344\342\022@\344\342\022@\344\342\022@\344\342\022@m\t\376?m\t\376?m\t\376?m\t\376?|;\242\276|;\242\276|;\242\276|;\242\276\210\ro>\210\ro>\210\ro>\210\ro>\210\ro>\247B9\276\247B9\276\247B9\276\247B9\276Y\200~\277Y\200~\277Y\200~\277Y\200~\277hf\206\277hf\206\277hf\206\277hf\206\277hf\206\277QE\244\277QE\244\277QE\244\277QE\244\277\254\345\005@\254\345\005@\254\345\005@\254\345\005@\344(\\\300\344(\\\300\344(\\\300\344(\\\300\344(\\\300\337\252a@\337\252a@\337\252a@\337\252a@\361S\227?\361S\227?\361S\227?\361S\227?\361S\227?E\265\346\276E\265\346\276E\265\346\276E\265\346\276w\255\030@w\255\030@w\255\030@w\255\030@\371\343\331\277\371\343\331\277\371\343\331\277\371\343\331\277\371\343\331\277\013$c@\013$c@\013$c@\013$c@\021\346\263\300\021\346\263\300\021\346\263\300\021\346\263\300`\353\272?`\353\272?`\353\272?`\353\272?`\353\272?Z>.@Z>.@Z>.@Z>.@\2172\210?\2172\210?\2172\210?\2172\210?\355\307f\300\355\307f\300\355\307f\300\355\307f\300\355\307f\300!\304N?!\304N?!\304N?!\304N?:\247\320?:\247\320?:\247\320?:\247\320?\237x|\277\237x|\277\237x|\277\237x|\277\237x|\277\214\364.@\214\364.@\214\364.@\214\364.@w@Z\277w@Z\277w@Z\277w@Z\2777\242\312\2777\242\312\2777\242\312\2777\242\312\2777\242\312\277\264\'\361?\264\'\361?\264\'\361?\264\'\361?{\231\350>{\231\350>{\231\350>{\231\350>\265\272\000?\265\272\000?\265\272\000?\265\272\000?\265\272\000?\'\362\254\277\'\362\254\277\'\362\254\277\'\362\254\277\010\361\222?\010\361\222?\010\361\222?\010\361\222?\240\022#A\240\022#A\240\022#A\240\022#A\240\022#A\227j\033\301\227j\033\301\227j\033\301\227j\033\301M G\277M G\277M G\277M G\277\265L\215\277\265L\215\277\265L\215\277\265L\215\277\265L\215\277\327\335\266\277\327\335\266\277\327\335\266\277\327\335\266\277h\'\005\300h\'\005\300h\'\005\300h\'\005\300h\'\005\300\224nd\277\224nd\277\224nd\277\224nd\277\241\357\204\277\241\357\204\277\241\357\204\277\241\357\204\277\332=+@\332=+@\332=+@\332=+@\014\361\"\277\014\361\"\277\014\361\"\277\014\361\"\277\014\361\"\277R\231\342\277R\231\342\277R\231\342\277R\231\342\277\276\2169@\276\2169@\276\2169@\276\2169@\276\2169@_\215\r\277_\215\r\277_\215\r\277_\215\r\277\3360\024\300\3360\024\300\3360\024\300\3360\024\300\234C\332\277\234C\332\277\234C\332\277\234C\332\277\234C\332\277s\241\026@s\241\026@s\241\026@s\241\026@aYA\277aYA\277aYA\277aYA\277\327\023\032\300\327\023\032\300\327\023\032\300\327\023\032\300\327\023\032\300\266\213h?\266\213h?\266\213h?\266\213h?g\213\360\277g\213\360\277g\213\360\277g\213\360\277g\213\360\277\275%\331?\275%\331?\275%\331?\275%\331?-\242\343?-\242\343?-\242\343?-\242\343?\312\230\232\277\312\230\232\277\312\230\232\277\312\230\232\277\317c\340\277\317c\340\277\317c\340\277\317c\340\277\317c\340\277Q\312\255?Q\312\255?Q\312\255?Q\312\255?\023h(>\023h(>"
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 457
          }
        }
        tensor_content: "\023\302\260?\023\302\260?\023\302\260?y\320\217@y\320\217@y\320\217@y\320\217@\350\261\023\300\350\261\023\300\350\261\023\300\350\261\023\300\350\261\023\300\203\336\272\277\203\336\272\277\203\336\272\277\203\336\272\277\375l\246\277\375l\246\277\375l\246\277\375l\246\277\267\'\264\276\267\'\264\276\267\'\264\276\267\'\264\276\267\'\264\276>\302\335=>\302\335=>\302\335=>\302\335=S\341~\276S\341~\276S\341~\276S\341~\276w\231#\300w\231#\300w\231#\300w\231#\300w\231#\300\016\332S\300\016\332S\300\016\332S\300\016\332S\300\211\242\"\300\211\242\"\300\211\242\"\300\211\242\"\300\222\247\016\301\222\247\016\301\222\247\016\301\222\247\016\301\222\247\016\301lu\206\300lu\206\300lu\206\300lu\206\300\253x\257\300\253x\257\300\253x\257\300\253x\257\300\253x\257\3005q=\3015q=\3015q=\3015q=\301\030\343\240\300\030\343\240\300\030\343\240\300\030\343\240\300Jj\256\274Jj\256\274Jj\256\274Jj\256\274\225>j\277\225>j\277\225>j\277\225>j\277\225>j\277\353\007\216@\353\007\216@\353\007\216@\353\007\216@goN\300goN\300goN\300goN\300goN\300\377=\344@\377=\344@\377=\344@\377=\344@\354_\222?\354_\222?\354_\222?\354_\222?\357\311\316\276\357\311\316\276\357\311\316\276\357\311\316\276\357\311\316\276\261\214T@\261\214T@\261\214T@\261\214T@\372\265\351\276\372\265\351\276\372\265\351\276\372\265\351\276\244\026\276\277\244\026\276\277\244\026\276\277\244\026\276\277\244\026\276\277\203\252dA\203\252dA\203\252dA\203\252dA=\312U\300=\312U\300=\312U\300=\312U\300=\312U\300\0164\024@\0164\024@\0164\024@\0164\024@yG\200@yG\200@yG\200@yG\200@\226@\020\277\226@\020\277\226@\020\277\226@\020\277>w\225=>w\225=>w\225=>w\225=>w\225=\004$\321?\004$\321?\004$\321?\004$\321?\346w\260?\346w\260?\346w\260?\346w\260?\204\362\207@\204\362\207@\204\362\207@\204\362\207@\204\362\207@\234\2403\300\234\2403\300\234\2403\300\234\2403\300\306\222\202?\306\222\202?\306\222\202?\306\222\202?\306\222\202?\316[b\277\316[b\277\316[b\277\316[b\277\277\203\240@\277\203\240@\277\203\240@\277\203\240@7\276\243\3007\276\243\3007\276\243\3007\276\243\3007\276\243\300E\222\021AE\222\021AE\222\021AE\222\021Ar/\246\300r/\246\300r/\246\300r/\246\300\022E%@\022E%@\022E%@\022E%@\362\300@\300\362\300@\300\362\300@\300\362\300@\300\362\300@\300\253h\213@\253h\213@\253h\213@\253h\213@\345\201M@\345\201M@\345\201M@\345\201M@\345\201M@UzP\300UzP\300UzP\300UzP\300;\262\007>;\262\007>;\262\007>;\262\007>!&\201@!&\201@!&\201@!&\201@!&\201@\237\302\221@\237\302\221@\237\302\221@\237\302\221@Z\000\202\277Z\000\202\277Z\000\202\277Z\000\202\277\"c\313\276\"c\313\276\"c\313\276\"c\313\276\"c\313\276\356Qv\277\356Qv\277\356Qv\277\356Qv\277\331\031c\277\331\031c\277\331\031c\277\331\031c\277+\002\203\277+\002\203\277+\002\203\277+\002\203\277+\002\203\277J^[?J^[?J^[?J^[?\254\254\034@\254\254\034@\254\254\034@\254\254\034@\215*\037\301\215*\037\301\215*\037\301\215*\037\301\215*\037\301\302\372\313@\302\372\313@\302\372\313@\302\372\313@\006\263\374?\006\263\374?\006\263\374?\006\263\374?\006\263\374?\375\245#\277\375\245#\277\375\245#\277\375\245#\277F\250\256@F\250\256@F\250\256@F\250\256@T\336\245\300T\336\245\300T\336\245\300T\336\245\300T\336\245\300\262\362\260@\262\362\260@\262\362\260@\262\362\260@\321F\376\300\321F\376\300\321F\376\300\321F\376\300\':\215@\':\215@\':\215@\':\215@\':\215@\223\364\223@\223\364\223@\223\364\223@\223\364\223@\253\004h@\253\004h@\253\004h@\253\004h@\266\273\033\301\266\273\033\301\266\273\033\301\266\273\033\301\266\273\033\301\244\250\001@\244\250\001@\244\250\001@\244\250\001@r\263w@r\263w@r\263w@r\263w@\370$\365\277\370$\365\277\370$\365\277\370$\365\277\370$\365\277\363\263\254@\363\263\254@\363\263\254@\363\263\254@\007\216U\300\007\216U\300\007\216U\300\007\216U\300\265\320I\300\265\320I\300\265\320I\300\265\320I\300\265\320I\300$\rZ@$\rZ@$\rZ@$\rZ@\2725\017@\2725\017@\2725\017@\2725\017@\213*u?\213*u?\213*u?\213*u?\213*u?\352\200\013\300\352\200\013\300\352\200\013\300\352\200\013\300\361\334\003@\361\334\003@\361\334\003@\361\334\003@\032A\270A\032A\270A\032A\270A\032A\270A\032A\270A\375}\223\301\375}\223\301\375}\223\301\375}\223\301\214\000\234\277\214\000\234\277\214\000\234\277\214\000\234\277\257rJ\277\257rJ\277\257rJ\277\257rJ\277\257rJ\277x\023\335\277x\023\335\277x\023\335\277x\023\335\277|\222\271\277|\222\271\277|\222\271\277|\222\271\277|\222\271\277\370\005\350?\370\005\350?\370\005\350?\370\005\350?9bW\3009bW\3009bW\3009bW\300\264\270\304@\264\270\304@\264\270\304@\264\270\304@\332A\304\277\332A\304\277\332A\304\277\332A\304\277\332A\304\277\350n\\\300\350n\\\300\350n\\\300\350n\\\3000\272\237@0\272\237@0\272\237@0\272\237@0\272\237@\"\240R?\"\240R?\"\240R?\"\240R?\253{7\300\253{7\300\253{7\300\253{7\300!T+\300!T+\300!T+\300!T+\300!T+\300\230\310\232@\230\310\232@\230\310\232@\230\310\232@\321\372Z\277\321\372Z\277\321\372Z\277\321\372Z\277\355\237z\300\355\237z\300\355\237z\300\355\237z\300\355\237z\300\033So@\033So@\033So@\033So@r\362S\300r\362S\300r\362S\300r\362S\300r\362S\300\253]\374?\253]\374?\253]\374?\253]\374?\021\201J@\021\201J@\021\201J@\021\201J@Xc;\300Xc;\300Xc;\300Xc;\300\273\247\210\300\273\247\210\300\273\247\210\300\273\247\210\300\273\247\210\300\350\232f@\350\232f@\350\232f@\350\232f@\030l\013>\030l\013>"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 457
          }
        }
        tensor_content: "\326X\330\273\335\271\225\274b\372/<\211\270\246\274\022\363\221\274\3003\324\274FM\364<\31012<^R\026<\325\201\357\274\023\027\013<\353\224b\274q\262\002\275Xz\356\273VA\023\275\212\267\252<\026\205\021\273\037\273\203\274\021F\277\271\024\266~<\321\244\000\275\341#\363\273u\217\327;\300%\r<\007\260\201<\324\342\220;\016\033\352;\031\367\032;\264:\221<\356\201\234\272Dd\232;q\375#<JQ\277\274\'\311\224\271=\034\305\274\274\0365\273\277>\336\274\372/\002\275\333 4\274\314M)\274E\347\260<\021\213\213\273\256q)<u<G<2R\000\274\234\242\214\272e\013:;{\315\232\274\037N\365\272\000\000\320\274Y\2411\275\237 \311\275\'\027\237\274P\222y\2759?\257\273\205Q\276<\223tX\275\307l\225\275|:\221<el\233\274\306q7=]\344\r:\200\237&\275*X\\=S\0301<\212@p\275\274]1\275m*\013=vE\343\273^\022\226;\203%_\275\027p\"\275J\317\223\275\010\217)=\005\346U=\327\234\350<_\324\200<PNj<\027\257\256<\2538~\273\202q\240<K@A=\347\026C\274\233w\365;?\345\036<\262;\254<\254\264\226;\224$\262\274\217\027\233\274\'\331/<\307\373\020\275m\232P=VR\035=\245\021\215<\331\207\264<\002\343\206\273\027\027u<\206\321A<\373G.\274\243u\243<\374\267\326<\302\214\221\271\262-\031\274\344\370\022;q\036\273<\3534\263;\342\206\024\274\367#\217\274dn\002=\277\237\000<!\260\3529]\256\273; \330\367\2733H\260;uY\211;sEz;\257yf<\216\250\224;\375,\266\270\034\312%\275\224_\216:\020V\255\274\036?\373<F\001\2748;\242\312<\013\221i<wTU<\312t\300;8y1:)\014;<m\357\206<wU\034;\023\324\013;\3761A\274a\245\313\274(?\253\274\322 \035\275)\310\031;\207AA\274\204K\307<UZ\343;\232\2230\275\325\301S\273\250\331\240<7\337\216;\234\335~<\373I\357;\327:\":\351\360\311\274\272\017\207\274\376\230\266<@\266\313;\3531l<\236\326h<\366\320\375;\001g\027<\013\361l<\363A\225;\265Z\270;\232\'\330<~\350\177950}\274KD\333\273{\025\276<\366\023Q<\246\256\245;Oa\232;\360\355E;\323\235S<^A@<\024\026\035;bv\263;\274\254\325;\220\337\201<\234T-<\024\006}\272q\334\323\273\242\347\201\273\300\337\244\274\307\211.<]\020l<s[\341:\013\177\206\273U\206?;\317\030\247<z[\222;i\226\377\273\332\000\002\274\020\300\014\274\323\201\000<\214o\n\275\013N\224\273\300\224\2419\271]\007=\235{C<\253\266\225\274\250\306D<\371i \273\216\004\327\274\031\205\251\275\321N\023<ySs\2743\376\014=\233u\252\274B\211\013<\t\352+9\221.\243\274\266F\236\274t\345:=U!K<\313\346.=\277\215\312\273x\333\230\273$\346\221\2731.d\275AOQ=\030\336\304;\000\224Y\274\245k\340;\334(J;\340\211I<xu(<\321\034\216<)\0134<\274\326\025<\350\033\354;\266V\373;\210\263\210;Zr\354;\302\235\366\272\322D\251<\245\302h;\263!\177;.\227/;<\206\210\274\032\363`\273S\036(<\\}\312;\375\030\355\274\322@h\274\310\305\217\274)*\254;\253\272C\273\274#\263;\024\330r<@\363\0319e\3647<F\253:\274K\205j<\322\016\323;\207M\206;\301.\026<\027r <7\352\265;\230J\347\273c0\205< \016\323<\236\212\313\273\361}\323\273\352$\316;\366\223\347\273Ch3;ZX\237\274:y\2669ye\266\272l\272\363\274E\367|<\235\235\000<A\214<;\034\334:<}}\351;\263\177\241\2740\337\337<\274aq;\"3\025<y1B<)*\377;\275kK;fT\233;1\334\217;\335L/\273\202\371\224<\243\032\362;H\242\261\273\321\033\275;\362j\026;\210E\202<\003\026\"\274\226;\354;\232>\206<\35238<\203$\247<\314\034G<E\005\372\273Y\332\202\274\252(\356:K\307i;\236\314\315\274\013%\377;2\241\363<\312\274\002<\237md;\322!\326;A-u\270\\,\313\273K\006\224\274\207\2418;\007\266\372\272\013&}<\241/\303<;5\213\274\007\322\334\273g\206\236;^\207\311<\346\343\013<\032\221\014<\346\374?:\324\273d<\256*\201;8\266\246;?\307\346\272\213c\255:C\341\346:k(E<qy5;\325\306&\273\325\021\200;\343\366p\272g\350\333\274G\360\2569,~\314<\030\273Q;\240\343B<\007u\036<\220i\255\272iP\327:\357\236\021\274keN<\306\202Z\274\306\021\266\272\271\233\002<\034\265\200;\017w\371\271\002v\355;\2471\2459\302\215G<\235~_<o\352O;,\3337;\305X\005\272\201?\025<a\351\314\272V_\271:\0149\204;;\324H\273\271O\253\274\246(F<C\216\201<\213\341\255;\256\004x;P\224\360\272<\274`;\002\261\366\273\025\022*\274gWg\273^\263\005\275\210\332\344<\1777\336<\246\200\020<\223\365\305;\246\303p<+Y\0279\221*=;u\017\334\272\316\347\276<Lz\236\274y\235\026:\356\355G\274P8\225\273\020\306x;\332i^\273V\347\005<\343\214M<\313\254\350;\373\031\215;\001U^\272\365\244|\274\003\234B<(\210F\272\247\005B\274py\350;\027,\224;\314f\220;\232\255\035;\207\340\r\273\252^6;\267R\264;X?u\273\\\307\276\272|\2732\273% \301;\217df\273m\265T\274\352\235\001\274+]\254<\005?B;\222\365\004\274!\220-\272\225}F\273x\376F8\310\277R\275\014\326h\273\024\313\337:\220t\214<\264\\\322\274\242\242[\274nH\020=$\230\341;\343\310\273<\037\312\352;a\252-<5\371\'\274a\025E;`\251.\272\265,\237;\325:\305\273yL\303\273\245\366(\274\311\335\347;\2655\350\274\177\322\016\275\266]\254\274Z\374\205<\216\235l;\344Z\003\275\016\234\330<ka\216<=\203\302<\355\231\355;\335\177C<\000\000\000\000\347z\030<\307\'\261\271\301\035\362;\34676<br\254\273\276\222\376\273\304\250\342:a\216\274\273\314\362e<\021\365S;\'\002\367;\254\300%\274\177\303\033;s1\354\272\223\263><\220\223\234<"
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 457
          }
        }
        tensor_content: "\341\264\272<F\263\233<R\235\343<\3726?=\341{\020\275\341\333<<k|\000<sz\001\275z\236\202<\020\367\362\273h\260\t=\327\020\020=\213g\006=/\277\222<\335`\004<\023\352\206<\267\316\213\274\334\243\245;\0216\367<*\241\257<\240\224\242<A\\f<\210\314\025<yz\201\275q\277z\274K\250~\272\245\217K<\335N\316\274\004F\004\275A \026\274f\356\237<{\343\000=\0218\307\274\223\253\023\274\227t\004;{\334\207;\325\010\312<\340\200\210<\321\254\274<j\217\253<\'\313\211\274\024\357$\275\264\224\316\274\254\013m\275x$\033:p\241\210\274\'\353\014\275\374\241\202:(\354\004>\262/\334\273\276A\246<\343\224N\274\203j\221\275\355{\215\275\270h\345\274\271\301\017\2740\255&\274y\017_=\342\006\r=-\000M\275\306hc=\177px=\32741\274JZW<\216\254\203\274\235\013\001\275Y\221\222=a\337\352<\2242C<5IM<\205fe=\021\343\376\273c?@\275\325\007`\2746}\330<T\255\024\274M0\267\274\014a\036\275\340\023\r;\353\274\200<^\341\021\272\317\036\272;\212\374\210<k\342\350<\004s\247<\343\333\322;w!\316\274\235\353\257\274\261S\230;\031vE:\032\263\216\274\207eL<?\013\203<\004R\2479d\223T<~iN\274\2104.\273_\211t;V\342$=\025\207h<\356j\367;w\327\370\272\032#\010\274\006wR=\211\n\255;38\226\272\236!\277\273uW =2s\205<\007v\365<\023E\t=\335o\272<\301I6\275\004\255\245\274t\016\277\274\203\345\233\273\260+\341<\324d\205<\337\262\204\274\001A\330\274\216\360\360;\225z\230\274\370\211\327<\330Wy\273*\241\244<A\206\000\274\377$\313\273qu\215\274\274d\205<\005{\005=\004\341\t:\362L\356\273;\207\255<\366\'\341<\177\211\347<Q\035\026\274\356\371\211\274W\372 <\315\337\225<\366}\014<\"XD\273E\336d;!\035 \275f\311\\;\230,`\274\016\237\017\274\210\'\211<\322\r\202;\312\262\220<0\265\204<Q\205z\273\345{\373;B\272U<4\023\201<\013\206\205<H}\344<\000\234\206<V\334w\273m`9\274\327\301\351<fP\230<\271+\t\275\274P\215;0`\270<\333\243)<s\311\210\2743\301*\274Ie\264<\307<\331:[\252\303\274\340\220\032\274b\326\250\274\230.\005<\016\214\305;\301\"\215<\372\306\220<\310L\213<\341\316\3379\027\006\367\273\240\034K<\370\032\314\273>\267\310<%\314\021<\225\006[<\251G&=\250cx;\036\206\020\275,R5\273\240Am<N<\004<\344\302\n;\t\373\372\273\346\'+<n\203\357\274,\'\253<<]\002=}\032\010<\224\260\213<c\250\355<p\271\214=\247\365\030=\346\n\216<\317B\350\273I\353P<q\021\013\275W\220t\274\256\267\250\275\272Z\217\273vbu<\263\301\177:t\363\030=\"_(<\252\331\242<\207g\025\274\262r(\275\256\372\310<\341\022\243\273\216\354\"\275M\020\016\275?\356M\274\0365\242<\335h\232<0\225>;}\235.=\3340X<\264\223\244\273S\312\033\274p\262\363<~{\255:\\\347.\275\200\301\302\273\314F\242\274\204\272\202<6\'\004\2746?\020\273\345\312J\274\361\233\240;\342\356\251:\014t\217\274\303q\330\274\203\027\230\272\207\243\261<\2647\270;\277O\230\273T\312\316\272\033\013j\274\226\3649<\253\355\203\274\201\2305\273\232\355\251<\360&\307\272\3547&:J\246\031\273\263\022\002=\321\2032<ir\356<\235\221\234<i\276\264;\230{[\273\024\212\013<${(\274\344\225]\274\217\250_\274H\326\010\273\016\321\366;\3501\312\272ao(<\255\336\327\272\317\237\207\274\231S\3738K\261c\274\013\302\233\274\206m\206<\031\266\035\274\314r9<\000\201\217\272\234t\353\273\006\233\000\2721I\222\274*|\327\274\225\333\311;\302\'\262\274\245\017\016<+\0245<f\254\251\273+J\221\273]k\344\273,\241\343\275\020\025H=\352\022\211\273\237\333\022\271\326_\321\274|\261\214\274\211\352\";}\304s;\351\023\246\274\266\"\273\273\206\375\216\275W\250\264\274g\344\241<3\2120<\006\256\020=\236\227\031\274f\261Q\274\375\031A=R0r<\343\354\213<\341\r\265\273\315\353\223\274\233\330;\274Ym\305\274\335\210^\273\311\024\257\273\205\202\226\273\343\r\304<\345&\202;zP\364\274\027\253\247\274\2617\371\273<O\300\274c\001\035\273\271\246S<\374\234O\274\321\362\345\274\273T\234<\305\342\335;\316j\253;\004\343B<\366:\2538\342o\020\273\367:,=\231\200\261;\336\306:<\265\023\006<+w\302<\tff\273\302\357:\275\311\017\030\274Lg7<\275d\342;A>\242\274*\324\246\271\370P\372;\n`\255\273/\361~\273\201\262\234\274Y\306\221\274\377a\222<0|\013=\341\324$;\202C\261;\024\333\367;\237}R\274\233s\000\274\240|\255\273\\\377\243;0h\033;{\204_\274u{\304\273\316\021\\\274b@\014\274\345\331\222\274\357\213E\274P\332\243\273\305\t\360;\030\000\205<<\200.;\206S\211\274\304C8\275\215Uc<\331\0271<\267v\212\273\363\025\206<\035\216c<\247\021\213\274\237^\213\274\203d6<R\277.<\350\364D=\023\245\241<.G\365\273\324\213B\274\317\030\372\274N9\304\274\230\005\225;!\267p\273(+\r\2752\303H<\2628\204<\335\271\251:B\016Q<\360Pj\274\357-\002\273`I\026<\022$T\274J\341\273<a\264\220:\322G\354\274\206\372\021<\203\353@\274/\002S<-\253l\274G0\314\273\035\033\274\273\r\221Q\274\352y%\275\014C\n\274\347Le\273M\255\304<\224\320\001=\320\205\350;\302\263\253\274\376\221\210\274\362\222Z<\232\262W<\331\303]\274\263\243\201<\025\341\330<\350[\001\274\024r\271:\001\200\037\275\330\256\035\275ZY\257\273\2377\004\274\331U\030<\010\361\254\273\271i\221\273`6K;v\233\021\274\361P\021=f\246\316\273\316!\267;\237\225\210<\302\275\'=\026\303\232=\256\332\227\274+\020.<\263\214\253<}6\203\273\2122\274\273I\350\t\274L\0238\274Z\203\2609\033\310N<\320\322\331::\260\345<\224\322}9p\202O\274SI\233;\240\200\340\274\206\206\302\273\217.\335<9\205\357<\360\355\025<\217\264N<\370%\256<6(\034\274"
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 457
          }
        }
        tensor_content: "\336G\316;&\026\222<\344\245\363<\312\274\240=\271\2049\275i\347x\274\003\225f:\264\025\265\274=rj<\263\177\277\274\004\255\370<dj\024=]\250l=\336\034\204<vP7\273\177\332\037=\\\220\270\271m\241\306<j\323\005=i\227\301=\021\236G=\247r\036;J}\034\2746\341\314\275z$\322\274\343\276B<\375\256\032<tk\007\275=!4\275\373<\031\274D\250\233<|9c=_N\322\274O+Z\274.\337\360\273\215h.<p\021\264:\222\016)=\354\236\336<*\370\310<\257\365$\275\322eg\2779\233\302\274P\257\357\275!;\310\275\017Pn;\'\254X\275soE\275\025J\n=\271\020r=\373]\226\274!\353\324\275&\312\261\275\036@\235\2756\306\201\273\245]x=\034\236\307\274)\330\201\275\201\n\250=\333\210\264\275\327\354\243=M\332\326=\316\307`\275\351\364Z=\353Xe;\311g\335\274\224\371\220=:\315F=x\267&=B2 =\241\204\206=H\2125:\274%\217\275z\236g\274\243\004\010=[|?;\217\013*\275\220\017\214\275\332Q\014=\212\371\'<c\017\263;\245\230\240=-\206H<U\251\021=\027h\201={\302\236<\265\315\356\274\355b\224\275)\002D\274s\336\221\274\322\362L\275k\241m<\263\217\366<\253cc<o^\200=\353\'^;\313UR\275>5)=\024\205\314=#b\033=\031\343\013=\376!\223\274%|\366\274`\377\222=\362\302\224:\223\233\024\272(\261\024\274\321K\003\274\235,\252;\227R\201=\324=\237;\302\030\334<\360\240i\275\274|\365\274\2648\203\274\000\202\276;\317\235K=\341\321\202<\000\000\000\000\212~\260\275\341~\275\274j.{\275\244\016D=\024\315\241:X`m=A7\017<1:\320\273\214\374\264\274\224\257G=\tV\314<t\035\243;\217qj\274\005 \340<C\026\262;\016\037P=J\241\275\274\227e*\2755\010\007<\'IV\274.\'.=4GP;\325\265\233\273`KY\275\301we<\331>Y\274\324\310\222\272n:\323<\032\367D\274\340\355\007<zG\035=n\323\001=\220\307\247;\177\327$=\207\264\360<:g\010=M\301Z=\251>S=\346\347Y\273\232\320\001<\364\336\267=\001\r\271=\345\351\210\275\321a\200<\214=i=\242\035/=O\033\350\274\021\377\"\274\032GE=\016\321\315;5\023?\275\340$\r\274\271\237A\275\347\3157=B\346%=\006!\240=\220\321\335<\236\370W=\221=\365<\016\331$\274|\307T=\221\256\270\273\344\211\235=\267;J=\262\372\264=b\340y=\321\2303\275\255\2028\276ou\255\275\004\350\230=\320_A<\370Y\333\274\216\3746\275 3\266<\276\315>\275R\036N=#\350\214=\374\350\014=99\210<=\212\252<\346\306\200\275\212\021\246=\371\037\316<\352\3247\274\016p\213\274\271\374\004\275eHp\274\027X5\276W\005\342\274\354\355\367;\320\360p\274\220\333\277=j\332\225\274\335\207\214<s5n\274\321\341O\275\264X7<\322\222X\274\322\213\367\274\277\370\227\275`\322\177\274\273\320\236<1M\002=S\213A=B`e=/k_<\341\274\034:Z\020\211\274\321\217X=\304\230S=\032\235\237\275]\312\245\274r\031\302\274b!\243:n\354\242;\367P\261\274\'9\211\274z\\\233\274m\310+\2736\242\016\275<\3303\275\237\246\227\273{\203;\273\321{\'=\370\211\326\274\'U\"\274xQ\025\275\032x\302<4J\374\274\221\376t\273\322\006Q<\264\320r<aXW;\277\310\276\272R\034\266=\363:\374<\364\254|=\327\205\003=\224\242\021<\300\0102\274\326\225B<\331Q\314\2744\206\366\274\351\313\310\274\225\301&;\246\200\371;\372\037\206;\206\330\030=h\324\343;\271\315\204\274F\375\357\272\212\014)\275\\\360r\275\221\256\006=\017~\216\274\326|\026=fLC<37\306\273\317\360\022\274\363v\326\274$\222(\275\310,]\274\270\363\345\273\033kP;\270\200\n\273}\303[\274\344y\352\274\222 \301\271*n\030\276\222\307\324<^9\335\272\373\221\203\274\310\3736\274\264A\247\274\333\327\037\274\307p\315\273\r\323\021\275\350\036\031\274o,\302\275\000\000\000\000\315U\204<X\245I\273\370\240\275<\206\223\301\274J\323\275<\322,\014>`W\357<\r\342\317<@\2572\274\261\336\332\274b\022\204\274\\\263\201\275\262l\252;\252\373\235<_\004\275\2747T(=\232=\r<\000\206L\275|\360\301\274\266\014\013\275\234\022\336\274%\3759\274\031\233\342<\026\241\371\273\247\262\'\274\'4\355;\360\010\271;\026\026Q<\025|o\274=\n\233\274I\356\273;\305c\220=\324b\302<\361\001\370;\027\303\264\274\226\224\215;\220\363j\274\346^n\275\223\374\006:\204\354\206:?\004\333\273\225\245\030\274-R<\274\315\215\212\272\301\t\034<\254\275+\274\302\227\307\274\000xU\273\021\240\003=D\260\201=\272[\022<\331L\261;\277O <\307\202>\274\201\200\000\274)\301\225\274\204\037o\274\014Lj\274/\310\251\274:\013\320\272\225\313{\274\313-9\274\344\370^\274oD[\275\202\370\200\274\376\265\256;\341\266\347;g\220,\274\033\315\202\274G\354\204\275\027y(<\307\336Z<n\375\217;\354Q\270;\212\247\313<\010\t\225\274\215\t,\275ZS\211<&Xy<V\'\212=\273\315\017=O\316p\274s\262\357\274\237\007U\274?7D\275Q\365\005<4\337\004\274\271S4\275\332\261\202=\037-s<\250\236o\273\036u\\<\212\244O\2752\334\253\274\270\354\034=\350\351\365\272&%Z=\3362\022<\0235A\275O\315\203<Lyo\275\030X~<\370\210\034\274\024\354\302\274\216\204\001\273\3037\242\274\227\351\t\275\302\2556\272_\3166:\301\262\"=Y\306\003\273{\222\354\274\241\236@\274\332\203\240\273\236o\346<\222z\206\273\021\016a;\302\337W=\237#\225;\365\261^\274\006\203\301<\363-_\2759\323U\275\200\306\206\274\017P\356\273\341\n\256<\276\312\030\274\214\257I\274\0140\300;+\021\277\2744\204\275<s\033W\274\nl\035<\202\357\203<\024\277\007=P\245u=\315\314\314\274\242\342\260:\002\317\\<\271\202\230\273\377\243\251<j\217\253\273q\352\367\274t\023\310\273r\002\202=\202\177t=\266\344\017=.7\006\274\231(\214\274y[\330\273\216\361J\275\332{\273\273\254\025i=\365F\301<\214?\021<\347\364\335=\315\215\212<\013\3242<"
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 457
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "linear/linear/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\311\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape"
  op: "Reshape"
  input: "Const"
  input: "linear/linear/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gdp_change/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/gdp_change/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/gdp_change/weight/part_0/Assign"
  op: "Assign"
  input: "linear/gdp_change/weight/part_0"
  input: "linear/gdp_change/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/gdp_change/weight/part_0/read"
  op: "Identity"
  input: "linear/gdp_change/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gdp_change/weight"
  op: "Identity"
  input: "linear/gdp_change/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/MatMul"
  op: "MatMul"
  input: "linear/linear/Reshape"
  input: "linear/gdp_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\311\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_1"
  op: "Reshape"
  input: "Const_4"
  input: "linear/linear/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gld_change/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/gld_change/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/gld_change/weight/part_0/Assign"
  op: "Assign"
  input: "linear/gld_change/weight/part_0"
  input: "linear/gld_change/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/gld_change/weight/part_0/read"
  op: "Identity"
  input: "linear/gld_change/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gld_change/weight"
  op: "Identity"
  input: "linear/gld_change/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/MatMul_1"
  op: "MatMul"
  input: "linear/linear/Reshape_1"
  input: "linear/gld_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\311\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_2"
  op: "Reshape"
  input: "Const_2"
  input: "linear/linear/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/manufacture_durable_orders_change/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/manufacture_durable_orders_change/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/manufacture_durable_orders_change/weight/part_0/Assign"
  op: "Assign"
  input: "linear/manufacture_durable_orders_change/weight/part_0"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/manufacture_durable_orders_change/weight/part_0/read"
  op: "Identity"
  input: "linear/manufacture_durable_orders_change/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/manufacture_durable_orders_change/weight"
  op: "Identity"
  input: "linear/manufacture_durable_orders_change/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/MatMul_2"
  op: "MatMul"
  input: "linear/linear/Reshape_2"
  input: "linear/manufacture_durable_orders_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\311\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_3"
  op: "Reshape"
  input: "Const_1"
  input: "linear/linear/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/manufacture_orders_change/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/manufacture_orders_change/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/manufacture_orders_change/weight/part_0/Assign"
  op: "Assign"
  input: "linear/manufacture_orders_change/weight/part_0"
  input: "linear/manufacture_orders_change/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/manufacture_orders_change/weight/part_0/read"
  op: "Identity"
  input: "linear/manufacture_orders_change/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/manufacture_orders_change/weight"
  op: "Identity"
  input: "linear/manufacture_orders_change/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/MatMul_3"
  op: "MatMul"
  input: "linear/linear/Reshape_3"
  input: "linear/manufacture_orders_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\311\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_4"
  op: "Reshape"
  input: "Const_5"
  input: "linear/linear/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/slv_change/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/slv_change/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/slv_change/weight/part_0/Assign"
  op: "Assign"
  input: "linear/slv_change/weight/part_0"
  input: "linear/slv_change/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/slv_change/weight/part_0/read"
  op: "Identity"
  input: "linear/slv_change/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/slv_change/weight"
  op: "Identity"
  input: "linear/slv_change/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/MatMul_4"
  op: "MatMul"
  input: "linear/linear/Reshape_4"
  input: "linear/slv_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\311\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_5"
  op: "Reshape"
  input: "Const_3"
  input: "linear/linear/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/spy_change/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/spy_change/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/spy_change/weight/part_0/Assign"
  op: "Assign"
  input: "linear/spy_change/weight/part_0"
  input: "linear/spy_change/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/spy_change/weight/part_0/read"
  op: "Identity"
  input: "linear/spy_change/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/spy_change/weight"
  op: "Identity"
  input: "linear/spy_change/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/MatMul_5"
  op: "MatMul"
  input: "linear/linear/Reshape_5"
  input: "linear/spy_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/AddN"
  op: "AddN"
  input: "linear/linear/MatMul"
  input: "linear/linear/MatMul_1"
  input: "linear/linear/MatMul_2"
  input: "linear/linear/MatMul_3"
  input: "linear/linear/MatMul_4"
  input: "linear/linear/MatMul_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "linear/bias_weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/read"
  op: "Identity"
  input: "linear/bias_weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight"
  op: "Identity"
  input: "linear/bias_weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/BiasAdd"
  op: "BiasAdd"
  input: "linear/linear/AddN"
  input: "linear/bias_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "centered_bias_weight"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "centered_bias_weight/Assign"
  op: "Assign"
  input: "centered_bias_weight"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "centered_bias_weight/read"
  op: "Identity"
  input: "centered_bias_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "centered_bias_weight/read"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "centered_bias_0"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BiasAdd"
  op: "BiasAdd"
  input: "linear/linear/BiasAdd"
  input: "centered_bias_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/pack"
  input: "strided_slice/pack_1"
  input: "strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Tile/multiples"
  op: "Pack"
  input: "strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Tile"
  op: "Tile"
  input: "centered_bias_weight/read"
  input: "Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Pack"
  input: "strided_slice"
  input: "Reshape_1/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "Tile"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "Const_6"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "Reshape_1"
  input: "logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss/Select"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "Reshape_1"
  input: "logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss/Neg"
  op: "Neg"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss/Select_1"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "logistic_loss/Neg"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss/mul"
  op: "Mul"
  input: "Reshape_1"
  input: "ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss/sub"
  op: "Sub"
  input: "logistic_loss/Select"
  input: "logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss/Exp"
  op: "Exp"
  input: "logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "logistic_loss/add"
  op: "Add"
  input: "logistic_loss/add/x"
  input: "logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss/Log"
  op: "Log"
  input: "logistic_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss"
  op: "Add"
  input: "logistic_loss/sub"
  input: "logistic_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss"
  op: "Mean"
  input: "logistic_loss"
  input: "Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\311\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Tile"
  op: "Tile"
  input: "gradients/loss_grad/Reshape"
  input: "gradients/loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Shape"
  op: "Shape"
  input: "logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Shape_1"
  op: "Shape"
  input: "loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Prod"
  op: "Prod"
  input: "gradients/loss_grad/Shape"
  input: "gradients/loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Prod_1"
  op: "Prod"
  input: "gradients/loss_grad/Shape_1"
  input: "gradients/loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Maximum"
  op: "Maximum"
  input: "gradients/loss_grad/Prod_1"
  input: "gradients/loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/floordiv"
  op: "Div"
  input: "gradients/loss_grad/Prod"
  input: "gradients/loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Cast"
  op: "Cast"
  input: "gradients/loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/truediv"
  op: "Div"
  input: "gradients/loss_grad/Tile"
  input: "gradients/loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Shape"
  op: "Shape"
  input: "logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "logistic_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/logistic_loss_grad/Shape"
  input: "gradients/logistic_loss_grad/Shape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Sum"
  op: "Sum"
  input: "gradients/loss_grad/truediv"
  input: "gradients/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/logistic_loss_grad/Sum"
  input: "gradients/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss_grad/truediv"
  input: "gradients/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/logistic_loss_grad/Sum_1"
  input: "gradients/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss_grad/Reshape"
  input: "^gradients/logistic_loss_grad/Reshape_1"
}
node {
  name: "gradients/logistic_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss_grad/Reshape"
  input: "^gradients/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss_grad/Reshape_1"
  input: "^gradients/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/logistic_loss/sub_grad/Shape"
  input: "gradients/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "gradients/logistic_loss_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/logistic_loss/sub_grad/Sum"
  input: "gradients/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/logistic_loss_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/logistic_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/logistic_loss/sub_grad/Neg"
  input: "gradients/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/sub_grad/Reshape"
  input: "^gradients/logistic_loss/sub_grad/Reshape_1"
}
node {
  name: "gradients/logistic_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/sub_grad/Reshape"
  input: "^gradients/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/sub_grad/Reshape_1"
  input: "^gradients/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Log_grad/Inv"
  op: "Inv"
  input: "logistic_loss/add"
  input: "^gradients/logistic_loss_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Log_grad/mul"
  op: "Mul"
  input: "gradients/logistic_loss_grad/tuple/control_dependency_1"
  input: "gradients/logistic_loss/Log_grad/Inv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/Select_grad/zeros_like"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/Select_grad/Select"
  input: "^gradients/logistic_loss/Select_grad/Select_1"
}
node {
  name: "gradients/logistic_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/Select_grad/Select"
  input: "^gradients/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/Select_grad/Select_1"
  input: "^gradients/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/logistic_loss/mul_grad/Shape"
  input: "gradients/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/mul"
  op: "Mul"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency_1"
  input: "ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "gradients/logistic_loss/mul_grad/mul"
  input: "gradients/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/logistic_loss/mul_grad/Sum"
  input: "gradients/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/mul_1"
  op: "Mul"
  input: "Reshape_1"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/logistic_loss/mul_grad/mul_1"
  input: "gradients/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/logistic_loss/mul_grad/Sum_1"
  input: "gradients/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/mul_grad/Reshape"
  input: "^gradients/logistic_loss/mul_grad/Reshape_1"
}
node {
  name: "gradients/logistic_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/mul_grad/Reshape"
  input: "^gradients/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/mul_grad/Reshape_1"
  input: "^gradients/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/add_grad/Shape"
  op: "Shape"
  input: "logistic_loss/add/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/add_grad/Shape_1"
  op: "Shape"
  input: "logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/logistic_loss/add_grad/Shape"
  input: "gradients/logistic_loss/add_grad/Shape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/add_grad/Sum"
  op: "Sum"
  input: "gradients/logistic_loss/Log_grad/mul"
  input: "gradients/logistic_loss/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/logistic_loss/add_grad/Sum"
  input: "gradients/logistic_loss/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/logistic_loss/Log_grad/mul"
  input: "gradients/logistic_loss/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/logistic_loss/add_grad/Sum_1"
  input: "gradients/logistic_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/add_grad/Reshape"
  input: "^gradients/logistic_loss/add_grad/Reshape_1"
}
node {
  name: "gradients/logistic_loss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/add_grad/Reshape"
  input: "^gradients/logistic_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/add_grad/Reshape_1"
  input: "^gradients/logistic_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "gradients/logistic_loss/add_grad/tuple/control_dependency_1"
  input: "logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/Exp_grad/mul"
  input: "gradients/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/Select_1_grad/zeros_like"
  input: "gradients/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/Select_1_grad/Select"
  input: "^gradients/logistic_loss/Select_1_grad/Select_1"
}
node {
  name: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/Select_1_grad/Select"
  input: "^gradients/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/Select_1_grad/Select_1"
  input: "^gradients/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/logistic_loss/Select_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/mul_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  input: "gradients/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Shape"
  op: "Shape"
  input: "Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN"
  input: "gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Shape"
  op: "Shape"
  input: "centered_bias_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/pack"
  op: "Pack"
  input: "Tile/multiples"
  input: "gradients/Tile_grad/Shape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Rank"
  op: "Rank"
  input: "gradients/Tile_grad/pack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/sub"
  op: "Sub"
  input: "gradients/Tile_grad/transpose/Rank"
  input: "gradients/Tile_grad/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Range"
  op: "Range"
  input: "gradients/Tile_grad/transpose/Range/start"
  input: "gradients/Tile_grad/transpose/Rank"
  input: "gradients/Tile_grad/transpose/Range/delta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/sub_1"
  op: "Sub"
  input: "gradients/Tile_grad/transpose/sub"
  input: "gradients/Tile_grad/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose"
  op: "Transpose"
  input: "gradients/Tile_grad/pack"
  input: "gradients/Tile_grad/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Reshape"
  op: "Reshape"
  input: "gradients/Tile_grad/transpose"
  input: "gradients/Tile_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Size"
  op: "Size"
  input: "gradients/Tile_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/range"
  op: "Range"
  input: "gradients/Tile_grad/range/start"
  input: "gradients/Tile_grad/Size"
  input: "gradients/Tile_grad/range/delta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Reshape_1_grad/Reshape"
  input: "gradients/Tile_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Sum"
  op: "Sum"
  input: "gradients/Tile_grad/Reshape_1"
  input: "gradients/Tile_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "centered_bias_weight/Adagrad"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "centered_bias_weight/Adagrad/Assign"
  op: "Assign"
  input: "centered_bias_weight/Adagrad"
  input: "Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "centered_bias_weight/Adagrad/read"
  op: "Identity"
  input: "centered_bias_weight/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adagrad/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "Adagrad/update_centered_bias_weight/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "centered_bias_weight"
  input: "centered_bias_weight/Adagrad"
  input: "Adagrad/learning_rate"
  input: "gradients/Tile_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adagrad"
  op: "NoOp"
  input: "^Adagrad/update_centered_bias_weight/ApplyAdagrad"
}
node {
  name: "ExpandDims_1/dim"
  op: "Const"
  input: "^Adagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims_1"
  op: "ExpandDims"
  input: "Const_6"
  input: "ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss_1/zeros_like"
  op: "ZerosLike"
  input: "BiasAdd"
  input: "^Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss_1/GreaterEqual"
  op: "GreaterEqual"
  input: "BiasAdd"
  input: "logistic_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss_1/Select"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "BiasAdd"
  input: "logistic_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss_1/Neg"
  op: "Neg"
  input: "BiasAdd"
  input: "^Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss_1/Select_1"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "logistic_loss_1/Neg"
  input: "BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss_1/mul"
  op: "Mul"
  input: "BiasAdd"
  input: "ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss_1/sub"
  op: "Sub"
  input: "logistic_loss_1/Select"
  input: "logistic_loss_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss_1/Exp"
  op: "Exp"
  input: "logistic_loss_1/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss_1/add/x"
  op: "Const"
  input: "^Adagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "logistic_loss_1/add"
  op: "Add"
  input: "logistic_loss_1/add/x"
  input: "logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss_1/Log"
  op: "Log"
  input: "logistic_loss_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_loss_1"
  op: "Add"
  input: "logistic_loss_1/sub"
  input: "logistic_loss_1/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_9"
  op: "Const"
  input: "^Adagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss_1"
  op: "Mean"
  input: "logistic_loss_1"
  input: "Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary_1"
  op: "ScalarSummary"
  input: "ScalarSummary_1/tags"
  input: "loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Shape"
  op: "Shape"
  input: "loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/Fill"
  op: "Fill"
  input: "gradients_1/Shape"
  input: "gradients_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/Fill"
  input: "gradients_1/loss_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\311\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/loss_1_grad/Reshape"
  input: "gradients_1/loss_1_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Shape"
  op: "Shape"
  input: "logistic_loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Shape_1"
  op: "Shape"
  input: "loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Prod"
  op: "Prod"
  input: "gradients_1/loss_1_grad/Shape"
  input: "gradients_1/loss_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Prod_1"
  op: "Prod"
  input: "gradients_1/loss_1_grad/Shape_1"
  input: "gradients_1/loss_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/loss_1_grad/Prod_1"
  input: "gradients_1/loss_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/floordiv"
  op: "Div"
  input: "gradients_1/loss_1_grad/Prod"
  input: "gradients_1/loss_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/Cast"
  op: "Cast"
  input: "gradients_1/loss_1_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss_1_grad/truediv"
  op: "Div"
  input: "gradients_1/loss_1_grad/Tile"
  input: "gradients_1/loss_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1_grad/Shape"
  op: "Shape"
  input: "logistic_loss_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1_grad/Shape_1"
  op: "Shape"
  input: "logistic_loss_1/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/logistic_loss_1_grad/Shape"
  input: "gradients_1/logistic_loss_1_grad/Shape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/loss_1_grad/truediv"
  input: "gradients_1/logistic_loss_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/logistic_loss_1_grad/Sum"
  input: "gradients_1/logistic_loss_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/loss_1_grad/truediv"
  input: "gradients_1/logistic_loss_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/logistic_loss_1_grad/Sum_1"
  input: "gradients_1/logistic_loss_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/sub_grad/Shape"
  op: "Shape"
  input: "logistic_loss_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/sub_grad/Shape_1"
  op: "Shape"
  input: "logistic_loss_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/logistic_loss_1/sub_grad/Shape"
  input: "gradients_1/logistic_loss_1/sub_grad/Shape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients_1/logistic_loss_1_grad/Reshape"
  input: "gradients_1/logistic_loss_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/logistic_loss_1/sub_grad/Sum"
  input: "gradients_1/logistic_loss_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/logistic_loss_1_grad/Reshape"
  input: "gradients_1/logistic_loss_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/logistic_loss_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/logistic_loss_1/sub_grad/Neg"
  input: "gradients_1/logistic_loss_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/Log_grad/Inv"
  op: "Inv"
  input: "logistic_loss_1/add"
  input: "^gradients_1/logistic_loss_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/Log_grad/mul"
  op: "Mul"
  input: "gradients_1/logistic_loss_1_grad/Reshape_1"
  input: "gradients_1/logistic_loss_1/Log_grad/Inv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/Select_grad/Select"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "gradients_1/logistic_loss_1/sub_grad/Reshape"
  input: "gradients_1/logistic_loss_1/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/Select_grad/Select_1"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "gradients_1/logistic_loss_1/Select_grad/zeros_like"
  input: "gradients_1/logistic_loss_1/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/mul_grad/Shape"
  op: "Shape"
  input: "BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/mul_grad/Shape_1"
  op: "Shape"
  input: "ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/logistic_loss_1/mul_grad/Shape"
  input: "gradients_1/logistic_loss_1/mul_grad/Shape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/logistic_loss_1/sub_grad/Reshape_1"
  input: "ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/logistic_loss_1/mul_grad/mul"
  input: "gradients_1/logistic_loss_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/logistic_loss_1/mul_grad/Sum"
  input: "gradients_1/logistic_loss_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/mul_grad/mul_1"
  op: "Mul"
  input: "BiasAdd"
  input: "gradients_1/logistic_loss_1/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/logistic_loss_1/mul_grad/mul_1"
  input: "gradients_1/logistic_loss_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/logistic_loss_1/mul_grad/Sum_1"
  input: "gradients_1/logistic_loss_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/add_grad/Shape"
  op: "Shape"
  input: "logistic_loss_1/add/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/add_grad/Shape_1"
  op: "Shape"
  input: "logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/logistic_loss_1/add_grad/Shape"
  input: "gradients_1/logistic_loss_1/add_grad/Shape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/logistic_loss_1/Log_grad/mul"
  input: "gradients_1/logistic_loss_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/logistic_loss_1/add_grad/Sum"
  input: "gradients_1/logistic_loss_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/logistic_loss_1/Log_grad/mul"
  input: "gradients_1/logistic_loss_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/logistic_loss_1/add_grad/Sum_1"
  input: "gradients_1/logistic_loss_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/Exp_grad/mul"
  op: "Mul"
  input: "gradients_1/logistic_loss_1/add_grad/Reshape_1"
  input: "logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "logistic_loss_1/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/Select_1_grad/Select"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "gradients_1/logistic_loss_1/Exp_grad/mul"
  input: "gradients_1/logistic_loss_1/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/Select_1_grad/Select_1"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "gradients_1/logistic_loss_1/Select_1_grad/zeros_like"
  input: "gradients_1/logistic_loss_1/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/logistic_loss_1/Neg_grad/Neg"
  op: "Neg"
  input: "gradients_1/logistic_loss_1/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN"
  op: "AddN"
  input: "gradients_1/logistic_loss_1/Select_grad/Select"
  input: "gradients_1/logistic_loss_1/mul_grad/Reshape"
  input: "gradients_1/logistic_loss_1/Select_1_grad/Select_1"
  input: "gradients_1/logistic_loss_1/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/logistic_loss_1/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/linear/linear/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/AddN"
  input: "linear/gdp_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/Reshape"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/AddN"
  input: "linear/gld_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/Reshape_1"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/AddN"
  input: "linear/manufacture_durable_orders_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/Reshape_2"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/AddN"
  input: "linear/manufacture_orders_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/Reshape_3"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/AddN"
  input: "linear/slv_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/Reshape_4"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/AddN"
  input: "linear/spy_change/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 457
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/linear/linear/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/Reshape_5"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "linear/gdp_change/weight/part_0/Ftrl"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/gdp_change/weight/part_0/Ftrl/Assign"
  op: "Assign"
  input: "linear/gdp_change/weight/part_0/Ftrl"
  input: "Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/gdp_change/weight/part_0/Ftrl/read"
  op: "Identity"
  input: "linear/gdp_change/weight/part_0/Ftrl"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/gdp_change/weight/part_0/Ftrl_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/gdp_change/weight/part_0/Ftrl_1/Assign"
  op: "Assign"
  input: "linear/gdp_change/weight/part_0/Ftrl_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/gdp_change/weight/part_0/Ftrl_1/read"
  op: "Identity"
  input: "linear/gdp_change/weight/part_0/Ftrl_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "linear/gld_change/weight/part_0/Ftrl"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/gld_change/weight/part_0/Ftrl/Assign"
  op: "Assign"
  input: "linear/gld_change/weight/part_0/Ftrl"
  input: "Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/gld_change/weight/part_0/Ftrl/read"
  op: "Identity"
  input: "linear/gld_change/weight/part_0/Ftrl"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/gld_change/weight/part_0/Ftrl_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/gld_change/weight/part_0/Ftrl_1/Assign"
  op: "Assign"
  input: "linear/gld_change/weight/part_0/Ftrl_1"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/gld_change/weight/part_0/Ftrl_1/read"
  op: "Identity"
  input: "linear/gld_change/weight/part_0/Ftrl_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl/Assign"
  op: "Assign"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl"
  input: "Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl/read"
  op: "Identity"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl_1/Assign"
  op: "Assign"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl_1/read"
  op: "Identity"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "linear/manufacture_orders_change/weight/part_0/Ftrl"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/manufacture_orders_change/weight/part_0/Ftrl/Assign"
  op: "Assign"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl"
  input: "Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/manufacture_orders_change/weight/part_0/Ftrl/read"
  op: "Identity"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/manufacture_orders_change/weight/part_0/Ftrl_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/manufacture_orders_change/weight/part_0/Ftrl_1/Assign"
  op: "Assign"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl_1"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/manufacture_orders_change/weight/part_0/Ftrl_1/read"
  op: "Identity"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "linear/slv_change/weight/part_0/Ftrl"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/slv_change/weight/part_0/Ftrl/Assign"
  op: "Assign"
  input: "linear/slv_change/weight/part_0/Ftrl"
  input: "Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/slv_change/weight/part_0/Ftrl/read"
  op: "Identity"
  input: "linear/slv_change/weight/part_0/Ftrl"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/slv_change/weight/part_0/Ftrl_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/slv_change/weight/part_0/Ftrl_1/Assign"
  op: "Assign"
  input: "linear/slv_change/weight/part_0/Ftrl_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/slv_change/weight/part_0/Ftrl_1/read"
  op: "Identity"
  input: "linear/slv_change/weight/part_0/Ftrl_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "linear/spy_change/weight/part_0/Ftrl"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/spy_change/weight/part_0/Ftrl/Assign"
  op: "Assign"
  input: "linear/spy_change/weight/part_0/Ftrl"
  input: "Const_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/spy_change/weight/part_0/Ftrl/read"
  op: "Identity"
  input: "linear/spy_change/weight/part_0/Ftrl"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/spy_change/weight/part_0/Ftrl_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/spy_change/weight/part_0/Ftrl_1/Assign"
  op: "Assign"
  input: "linear/spy_change/weight/part_0/Ftrl_1"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/spy_change/weight/part_0/Ftrl_1/read"
  op: "Identity"
  input: "linear/spy_change/weight/part_0/Ftrl_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Ftrl"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Ftrl/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0/Ftrl"
  input: "Const_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Ftrl/read"
  op: "Identity"
  input: "linear/bias_weight/part_0/Ftrl"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Ftrl_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Ftrl_1/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0/Ftrl_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Ftrl_1/read"
  op: "Identity"
  input: "linear/bias_weight/part_0/Ftrl_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Ftrl/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "Ftrl/l1_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Ftrl/l2_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Ftrl/learning_rate_power"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "Ftrl/update_linear/gdp_change/weight/part_0/ApplyFtrl"
  op: "ApplyFtrl"
  input: "linear/gdp_change/weight/part_0"
  input: "linear/gdp_change/weight/part_0/Ftrl"
  input: "linear/gdp_change/weight/part_0/Ftrl_1"
  input: "gradients_1/linear/linear/MatMul_grad/MatMul_1"
  input: "Ftrl/learning_rate"
  input: "Ftrl/l1_regularization_strength"
  input: "Ftrl/l2_regularization_strength"
  input: "Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Ftrl/update_linear/gld_change/weight/part_0/ApplyFtrl"
  op: "ApplyFtrl"
  input: "linear/gld_change/weight/part_0"
  input: "linear/gld_change/weight/part_0/Ftrl"
  input: "linear/gld_change/weight/part_0/Ftrl_1"
  input: "gradients_1/linear/linear/MatMul_1_grad/MatMul_1"
  input: "Ftrl/learning_rate"
  input: "Ftrl/l1_regularization_strength"
  input: "Ftrl/l2_regularization_strength"
  input: "Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Ftrl/update_linear/manufacture_durable_orders_change/weight/part_0/ApplyFtrl"
  op: "ApplyFtrl"
  input: "linear/manufacture_durable_orders_change/weight/part_0"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl_1"
  input: "gradients_1/linear/linear/MatMul_2_grad/MatMul_1"
  input: "Ftrl/learning_rate"
  input: "Ftrl/l1_regularization_strength"
  input: "Ftrl/l2_regularization_strength"
  input: "Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Ftrl/update_linear/manufacture_orders_change/weight/part_0/ApplyFtrl"
  op: "ApplyFtrl"
  input: "linear/manufacture_orders_change/weight/part_0"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl_1"
  input: "gradients_1/linear/linear/MatMul_3_grad/MatMul_1"
  input: "Ftrl/learning_rate"
  input: "Ftrl/l1_regularization_strength"
  input: "Ftrl/l2_regularization_strength"
  input: "Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Ftrl/update_linear/slv_change/weight/part_0/ApplyFtrl"
  op: "ApplyFtrl"
  input: "linear/slv_change/weight/part_0"
  input: "linear/slv_change/weight/part_0/Ftrl"
  input: "linear/slv_change/weight/part_0/Ftrl_1"
  input: "gradients_1/linear/linear/MatMul_4_grad/MatMul_1"
  input: "Ftrl/learning_rate"
  input: "Ftrl/l1_regularization_strength"
  input: "Ftrl/l2_regularization_strength"
  input: "Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Ftrl/update_linear/spy_change/weight/part_0/ApplyFtrl"
  op: "ApplyFtrl"
  input: "linear/spy_change/weight/part_0"
  input: "linear/spy_change/weight/part_0/Ftrl"
  input: "linear/spy_change/weight/part_0/Ftrl_1"
  input: "gradients_1/linear/linear/MatMul_5_grad/MatMul_1"
  input: "Ftrl/learning_rate"
  input: "Ftrl/l1_regularization_strength"
  input: "Ftrl/l2_regularization_strength"
  input: "Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Ftrl/update_linear/bias_weight/part_0/ApplyFtrl"
  op: "ApplyFtrl"
  input: "linear/bias_weight/part_0"
  input: "linear/bias_weight/part_0/Ftrl"
  input: "linear/bias_weight/part_0/Ftrl_1"
  input: "gradients_1/linear/linear/BiasAdd_grad/BiasAddGrad"
  input: "Ftrl/learning_rate"
  input: "Ftrl/l1_regularization_strength"
  input: "Ftrl/l2_regularization_strength"
  input: "Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Ftrl"
  op: "NoOp"
  input: "^Ftrl/update_linear/gdp_change/weight/part_0/ApplyFtrl"
  input: "^Ftrl/update_linear/gld_change/weight/part_0/ApplyFtrl"
  input: "^Ftrl/update_linear/manufacture_durable_orders_change/weight/part_0/ApplyFtrl"
  input: "^Ftrl/update_linear/manufacture_orders_change/weight/part_0/ApplyFtrl"
  input: "^Ftrl/update_linear/slv_change/weight/part_0/ApplyFtrl"
  input: "^Ftrl/update_linear/spy_change/weight/part_0/ApplyFtrl"
  input: "^Ftrl/update_linear/bias_weight/part_0/ApplyFtrl"
}
node {
  name: "AssignAdd/value"
  op: "Const"
  input: "^Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "AssignAdd"
  op: "AssignAdd"
  input: "global_step"
  input: "AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^linear/gdp_change/weight/part_0/Assign"
  input: "^linear/gld_change/weight/part_0/Assign"
  input: "^linear/manufacture_durable_orders_change/weight/part_0/Assign"
  input: "^linear/manufacture_orders_change/weight/part_0/Assign"
  input: "^linear/slv_change/weight/part_0/Assign"
  input: "^linear/spy_change/weight/part_0/Assign"
  input: "^linear/bias_weight/part_0/Assign"
  input: "^centered_bias_weight/Assign"
  input: "^centered_bias_weight/Adagrad/Assign"
  input: "^linear/gdp_change/weight/part_0/Ftrl/Assign"
  input: "^linear/gdp_change/weight/part_0/Ftrl_1/Assign"
  input: "^linear/gld_change/weight/part_0/Ftrl/Assign"
  input: "^linear/gld_change/weight/part_0/Ftrl_1/Assign"
  input: "^linear/manufacture_durable_orders_change/weight/part_0/Ftrl/Assign"
  input: "^linear/manufacture_durable_orders_change/weight/part_0/Ftrl_1/Assign"
  input: "^linear/manufacture_orders_change/weight/part_0/Ftrl/Assign"
  input: "^linear/manufacture_orders_change/weight/part_0/Ftrl_1/Assign"
  input: "^linear/slv_change/weight/part_0/Ftrl/Assign"
  input: "^linear/slv_change/weight/part_0/Ftrl_1/Assign"
  input: "^linear/spy_change/weight/part_0/Ftrl/Assign"
  input: "^linear/spy_change/weight/part_0/Ftrl_1/Assign"
  input: "^linear/bias_weight/part_0/Ftrl/Assign"
  input: "^linear/bias_weight/part_0/Ftrl_1/Assign"
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear/gdp_change/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/gld_change/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "linear/manufacture_durable_orders_change/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "linear/manufacture_orders_change/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear/slv_change/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear/spy_change/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "centered_bias_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "centered_bias_weight/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "linear/gdp_change/weight/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "linear/gdp_change/weight/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "linear/gld_change/weight/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "linear/gld_change/weight/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "linear/slv_change/weight/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "linear/slv_change/weight/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "linear/spy_change/weight/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "linear/spy_change/weight/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pack"
  op: "Pack"
  input: "IsVariableInitialized"
  input: "IsVariableInitialized_1"
  input: "IsVariableInitialized_2"
  input: "IsVariableInitialized_3"
  input: "IsVariableInitialized_4"
  input: "IsVariableInitialized_5"
  input: "IsVariableInitialized_6"
  input: "IsVariableInitialized_7"
  input: "IsVariableInitialized_8"
  input: "IsVariableInitialized_9"
  input: "IsVariableInitialized_10"
  input: "IsVariableInitialized_11"
  input: "IsVariableInitialized_12"
  input: "IsVariableInitialized_13"
  input: "IsVariableInitialized_14"
  input: "IsVariableInitialized_15"
  input: "IsVariableInitialized_16"
  input: "IsVariableInitialized_17"
  input: "IsVariableInitialized_18"
  input: "IsVariableInitialized_19"
  input: "IsVariableInitialized_20"
  input: "IsVariableInitialized_21"
  input: "IsVariableInitialized_22"
  input: "IsVariableInitialized_23"
  attr {
    key: "N"
    value {
      i: 24
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "LogicalNot"
  op: "LogicalNot"
  input: "pack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Const_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 24
          }
        }
        string_val: "global_step"
        string_val: "linear/gdp_change/weight/part_0"
        string_val: "linear/gld_change/weight/part_0"
        string_val: "linear/manufacture_durable_orders_change/weight/part_0"
        string_val: "linear/manufacture_orders_change/weight/part_0"
        string_val: "linear/slv_change/weight/part_0"
        string_val: "linear/spy_change/weight/part_0"
        string_val: "linear/bias_weight/part_0"
        string_val: "centered_bias_weight"
        string_val: "centered_bias_weight/Adagrad"
        string_val: "linear/gdp_change/weight/part_0/Ftrl"
        string_val: "linear/gdp_change/weight/part_0/Ftrl_1"
        string_val: "linear/gld_change/weight/part_0/Ftrl"
        string_val: "linear/gld_change/weight/part_0/Ftrl_1"
        string_val: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl"
        string_val: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl_1"
        string_val: "linear/manufacture_orders_change/weight/part_0/Ftrl"
        string_val: "linear/manufacture_orders_change/weight/part_0/Ftrl_1"
        string_val: "linear/slv_change/weight/part_0/Ftrl"
        string_val: "linear/slv_change/weight/part_0/Ftrl_1"
        string_val: "linear/spy_change/weight/part_0/Ftrl"
        string_val: "linear/spy_change/weight/part_0/Ftrl_1"
        string_val: "linear/bias_weight/part_0/Ftrl"
        string_val: "linear/bias_weight/part_0/Ftrl_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Shape"
  op: "Shape"
  input: "Const_17"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/Shape"
  input: "report_uninitialized_variables/strided_slice/pack"
  input: "report_uninitialized_variables/strided_slice/pack_1"
  input: "report_uninitialized_variables/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/concat"
  op: "Concat"
  input: "report_uninitialized_variables/concat/concat_dim"
  input: "report_uninitialized_variables/concat/values_0"
  input: "report_uninitialized_variables/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Reshape"
  op: "Reshape"
  input: "Const_17"
  input: "report_uninitialized_variables/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Reshape_1"
  op: "Reshape"
  input: "LogicalNot"
  input: "report_uninitialized_variables/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Where"
  op: "Where"
  input: "report_uninitialized_variables/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/Reshape"
  input: "report_uninitialized_variables/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "ScalarSummary"
  input: "ScalarSummary_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/Const"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 24
          }
        }
        string_val: "centered_bias_weight"
        string_val: "centered_bias_weight/Adagrad"
        string_val: "global_step"
        string_val: "linear/bias_weight"
        string_val: "linear/bias_weight/Ftrl"
        string_val: "linear/bias_weight/Ftrl_1"
        string_val: "linear/gdp_change/weight"
        string_val: "linear/gdp_change/weight/Ftrl"
        string_val: "linear/gdp_change/weight/Ftrl_1"
        string_val: "linear/gld_change/weight"
        string_val: "linear/gld_change/weight/Ftrl"
        string_val: "linear/gld_change/weight/Ftrl_1"
        string_val: "linear/manufacture_durable_orders_change/weight"
        string_val: "linear/manufacture_durable_orders_change/weight/Ftrl"
        string_val: "linear/manufacture_durable_orders_change/weight/Ftrl_1"
        string_val: "linear/manufacture_orders_change/weight"
        string_val: "linear/manufacture_orders_change/weight/Ftrl"
        string_val: "linear/manufacture_orders_change/weight/Ftrl_1"
        string_val: "linear/slv_change/weight"
        string_val: "linear/slv_change/weight/Ftrl"
        string_val: "linear/slv_change/weight/Ftrl_1"
        string_val: "linear/spy_change/weight"
        string_val: "linear/spy_change/weight/Ftrl"
        string_val: "linear/spy_change/weight/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 24
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/ShardedFilename"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "centered_bias_weight"
  input: "centered_bias_weight/Adagrad"
  input: "global_step"
  input: "linear/bias_weight/part_0/read"
  input: "linear/bias_weight/part_0/Ftrl/read"
  input: "linear/bias_weight/part_0/Ftrl_1/read"
  input: "linear/gdp_change/weight/part_0/read"
  input: "linear/gdp_change/weight/part_0/Ftrl/read"
  input: "linear/gdp_change/weight/part_0/Ftrl_1/read"
  input: "linear/gld_change/weight/part_0/read"
  input: "linear/gld_change/weight/part_0/Ftrl/read"
  input: "linear/gld_change/weight/part_0/Ftrl_1/read"
  input: "linear/manufacture_durable_orders_change/weight/part_0/read"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl/read"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl_1/read"
  input: "linear/manufacture_orders_change/weight/part_0/read"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl/read"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl_1/read"
  input: "linear/slv_change/weight/part_0/read"
  input: "linear/slv_change/weight/part_0/Ftrl/read"
  input: "linear/slv_change/weight/part_0/Ftrl_1/read"
  input: "linear/spy_change/weight/part_0/read"
  input: "linear/spy_change/weight/part_0/Ftrl/read"
  input: "linear/spy_change/weight/part_0/Ftrl_1/read"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilespec"
  op: "ShardedFilespec"
  input: "save/Const"
  input: "save/num_shards"
  input: "^save/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "centered_bias_weight"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "centered_bias_weight"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "centered_bias_weight/Adagrad"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "centered_bias_weight/Adagrad"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bias_weight"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bias_weight/Ftrl"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "linear/bias_weight/part_0/Ftrl"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bias_weight/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "linear/bias_weight/part_0/Ftrl_1"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/gdp_change/weight"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "linear/gdp_change/weight/part_0"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/gdp_change/weight/Ftrl"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "linear/gdp_change/weight/part_0/Ftrl"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/gdp_change/weight/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "linear/gdp_change/weight/part_0/Ftrl_1"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gdp_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/gld_change/weight"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "linear/gld_change/weight/part_0"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/gld_change/weight/Ftrl"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "linear/gld_change/weight/part_0/Ftrl"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/gld_change/weight/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "linear/gld_change/weight/part_0/Ftrl_1"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gld_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/manufacture_durable_orders_change/weight"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "linear/manufacture_durable_orders_change/weight/part_0"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/manufacture_durable_orders_change/weight/Ftrl"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/manufacture_durable_orders_change/weight/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "linear/manufacture_durable_orders_change/weight/part_0/Ftrl_1"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_durable_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/manufacture_orders_change/weight"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "linear/manufacture_orders_change/weight/part_0"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/manufacture_orders_change/weight/Ftrl"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/manufacture_orders_change/weight/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear/manufacture_orders_change/weight/part_0/Ftrl_1"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/manufacture_orders_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/slv_change/weight"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear/slv_change/weight/part_0"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/slv_change/weight/Ftrl"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear/slv_change/weight/part_0/Ftrl"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/slv_change/weight/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear/slv_change/weight/part_0/Ftrl_1"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/slv_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/spy_change/weight"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear/spy_change/weight/part_0"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_22/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/spy_change/weight/Ftrl"
      }
    }
  }
}
node {
  name: "save/restore_slice_22/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_22"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_22/tensor_name"
  input: "save/restore_slice_22/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "linear/spy_change/weight/part_0/Ftrl"
  input: "save/restore_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_23/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/spy_change/weight/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_23/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_23"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_23/tensor_name"
  input: "save/restore_slice_23/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "linear/spy_change/weight/part_0/Ftrl_1"
  input: "save/restore_slice_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/spy_change/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 11
}
